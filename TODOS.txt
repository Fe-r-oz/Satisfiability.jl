# TODO 4/26/23
Fix names (just add them for now) - done 4/28/23
Fix equality comparison - done 4/28/23
Start SMTLIB2 section - done 4/30/23

# TODO 5/1/23
Fix broadcasting ambiguity - done 5/6/23
Finish unit tests for operators  - done 5/6/23
Add return types to all functions - resolved, not necessary. 5/6/23

# TODO 5/6/23
Change to arrays of 1-valued BoolExpr - done 5/6/23
Implement all(z1 .∧ z2) and any(z1 .∨ z2) behavior - done 5/12/23
Fix SMT statement functions after change - done

# TODO 5/12/23
Fix naming to be more coherent, for example using hashing to generate unique hex names for combined operators - done 5/13/23
Fix unittests to match new naming scheme - done

# TODO 5/16/23
Write a function that saves the problem to a file, ending with (check-sat) - done
Write a function that opens an smt2 input terminal to z3 and inputs the problem, then issues (check-sat) if no errors occur - modified, we made a function that calls z3 on the file
Write a function that retrieves (parses) the solution from z3 - done
Write larger demo with scheduling problem - done 6/4/23

# TODO 5/25/23
Fix bugs with any() and all() - done
Write function that propagates values from :Identity elements to logical statements - done
Fix constructor to use values if they are present, eg if x.value = true then not(x).value = false - done
Add support for literals - done 6/7/23
Fix horrible bug with negation - done 6/3/23
Fix so 1x1 expressions are single BoolExprs instead of 1x1 matrix - possibly done? may leave alone.
Fix calling sat!(Array{BoolExpr}) so it works. - done 6/2/23

# TODO 6/13/23
Fix the long-standing bug where we cannot open a channel to z3 with two-way communication. - done 6/13/23
Move helper functions to another file to manage the file length and clean up code - done 6/13/23.
Fix export to not export helper functions and use BooleanSatisfiability. to access them for unittests - done 6/13/23
Add docstrings to all exported functions - done 6/13/23
Look into defining getproperty(x::Array{BoolExpr}, f::Symbol) to fix the non-working-ness of x.value
Finish writing unit tests for literals - done 6/14/23
Check for unsightly map() statements. For example, map( (x) -> x.value, X) can be rewritten as [x.value for x in X] but be careful of type effects. https://discourse.julialang.org/t/map-vs-list-comprehension/916

# TODO 6/22/23
Test another solver besides Z3
Add capability to provide a custom command command string when invoking z3. This is useful if z3 is on a weird path in the system or the user wants to invoke a different solver. - done 6/22/23
Clean up code by splitting it into files - done 6/22/23
Add the operators xor, iff, and ite (if-then-else) which are in the SMT propositional logic spec - done 6/23/23
Updated implies to use its own operator (=>) - done 6/23/23
Add functionality to warn about duplicate names - done 6/23/23

# BEFORE RELEASING
Determine which functions aren't covered by unittests - done 6/22/23
Increase unittest coverage - done 6/22/23
Set up to generate documentation locally in Documenter.jl https://documenter.juliadocs.org/stable/man/guide - done 6/19/23
Use @warn and @error correctly for non-breaking errors.
Check compliance with the Julia style guide. https://docs.julialang.org/en/v1/manual/style-guide/
Generate documentation - started 6/21/23
Publish documentation
